---
version: '3'

networks:
  traefik_network:
    external:
      name: {{ traefik.network_name }}

services:
  sish_app:
    image: antoniomika/sish:latest
    container_name: sish_app
    restart: unless-stopped
    networks:
      - traefik_network

    volumes:
      - {{ service_root }}/pubkeys:/pubkeys
      - {{ service_root }}/keys:/keys
    command: |
      --ssh-address=:22
      --http-address=:80
      --https=false
      --admin-console
      --authentication=true
      --authentication-password="\"\""
      --authentication-keys-directory=/pubkeys
      --private-key-location=/keys/ssh_key
      --bind-random-ports=false
      --bind-random-subdomains=false
      --domain={{ service_domain }}

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ traefik.network_name }}"
      - "traefik.http.services.{{ service_item }}.loadbalancer.server.scheme=http"
      - "traefik.http.services.{{ service_item }}.loadbalancer.server.port={{ service_port }}"
      - "traefik.http.routers.{{ service_item }}-http.rule=HostRegexp(`{{ service_domain }}`, `{subdomain:[A-Za-z0-9-]+}.{{ service_domain }}`)"
      - "traefik.http.routers.{{ service_item }}-http.entrypoints=http"
      - "traefik.http.routers.{{ service_item }}-http.middlewares={% if service_https_only %}redirect@file, security-headers@file, {% else %}{% if service_auth %}{% if authelia.enabled %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameCloud@file"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.{{ service_item }}.rule=HostRegexp(`{{ service_domain }}`, `{subdomain:[A-Za-z0-9-]+}.{{ service_domain }}`)"
      - "traefik.http.routers.{{ service_item }}.entrypoints=https"
      - "traefik.http.routers.{{ service_item }}.middlewares={% if service_auth %}{% if authelia.enabled %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameCloud@file"
      - "traefik.http.routers.{{ service_item }}.tls=true"
      - "traefik.http.routers.{{ service_item }}.tls.certresolver=dns"
      - "traefik.http.routers.{{ service_item }}.tls.domains[0].main={{ service_domain }}"
      - "traefik.http.routers.{{ service_item }}.tls.domains[0].sans=*.{{ service_domain }}"
{% endif %}
      - "traefik.tcp.routers.{{ service_item }}-ssh.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.{{ service_item }}-ssh.entrypoints=ssh_sish"
      - "traefik.tcp.routers.{{ service_item }}-ssh.service={{ service_item }}-ssh-svc"
      - "traefik.tcp.services.{{ service_item }}-ssh-svc.loadbalancer.server.port=22"

