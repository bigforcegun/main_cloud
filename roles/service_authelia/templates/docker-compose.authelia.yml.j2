---
version: '3'

# This networks section required for the pacakge to be visible to Traefik.
# DO NOT Remove
networks:
  traefik_network:
    external:
      name: {{ traefik.network_name }}

services:
  auth:
    image: authelia/authelia:4.18.1
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ traefik.network_name }}"
      - "traefik.http.services.authelia.loadbalancer.server.scheme=http"
      - "traefik.http.services.authelia.loadbalancer.server.port=9091"
      - "traefik.http.routers.authelia-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.authelia-http.entrypoints=http"
      - "traefik.http.routers.authelia-http.middlewares={% if authelia.https_only %}redirect@file, security-headers@file, {% else %}{% if authelia.auth %}{% if authelia.enabled %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameCloud@file"
      - "traefik.http.routers.authelia.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.authelia.entrypoints=https"
      - "traefik.http.routers.authelia.middlewares={% if authelia.auth %}{% if authelia.enabled %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameCloud@file"
      - "traefik.http.routers.authelia.tls=true"
{% if traefik.dns_challenge_provider_enabled %}
      - "traefik.http.routers.authelia.tls.certresolver=dns"
      - "traefik.http.routers.authelia.tls.domains[0].main={{ service_domain }}"
      # - "traefik.http.routers.authelia.tls.domains[0].sans=*.{{ service_domain }}"
{% else %}
      - "traefik.http.routers.authelia.tls.certresolver=http"
{% endif %}
    volumes:
      - "{{ services_root }}/authelia/authelia_config.yml:/etc/authelia/configuration.yml:ro"
      - "{{ services_root }}/authelia/userdb.yml:/etc/authelia/userdb.yml"

  redis:
    networks:
      - traefik_network
    image: redis:5.0.5-alpine
    
  postgres:
    networks:
      - traefik_network
    image: postgres:12
    environment:
      POSTGRES_DB: my_authelia
      POSTGRES_PASSWORD: {{lookup('password', './settings/passwords/authelia_postgres_password')}}
    volumes:
      - "{{ services_root }}/authelia/postgres_data:/var/lib/postgresql/data"
