      - "traefik.enable=true"
      - "traefik.docker.network={{ traefik.network_name }}"
      - "traefik.http.services.{{ service_item }}.loadbalancer.server.scheme=http"
      - "traefik.http.services.{{ service_item }}.loadbalancer.server.port={{ service_port }}"
      - "traefik.http.routers.{{ service_item }}-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.{{ service_item }}-http.entrypoints=http"
      - "traefik.http.routers.{{ service_item }}-http.middlewares={% if service_https_only %}redirect@file, security-headers@file, {% else %}{% if service_auth %}{% if authelia.enabled %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameCloud@file"
      - "traefik.http.routers.{{ service_item }}.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.{{ service_item }}.entrypoints=https"
      - "traefik.http.routers.{{ service_item }}.middlewares={% if service_auth %}{% if authelia.enabled %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameCloud@file"
      - "traefik.http.routers.{{ service_item }}.tls=true"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.{{ service_item }}.tls.certresolver=dns"
      - "traefik.http.routers.{{ service_item }}.tls.domains[0].main={{ domain1 }}"
      - "traefik.http.routers.{{ service_item }}.tls.domains[0].sans=*.{{ domain1 }}"
{% else %}
      - "traefik.http.routers.{{ service_item }}.tls.certresolver=http"
{% endif %}